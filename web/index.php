<?php
use FormulaParser\FormulaParser;
require('../vendor/autoload.php');
$con = pg_connect(getenv("DATABASE_URL"));
$app = new Silex\Application();
$app['debug'] = true;

// Register the monolog logging service
$app->register(new Silex\Provider\MonologServiceProvider(), array(
  'monolog.logfile' => 'php://stderr',
));

// Our web handlers

$app->get('/', function() use($app) {
  return "Hello world";
});
$app->post('/bot', function() use($app) {
  $data = json_decode(file_get_contents('php://input'));

  if(!$data)
    return "nioh";
  
  if( $data->secret !== getenv('VK_SECRET_TOKEN') && $data->type !== 'confirmation')
    return 'nioh';

  switch($data->type){
    case 'confirmation':
      return getenv('VK_CONFIRMATION_CODE');
      break;
      

    case 'message_new':
      $request_params = array(
        'peer_id' => "{$data->object->peer_id}",
        'message'=>'null',
        'access_token' => '18d28ce6782d1c964c4bac21f4fd054378c65e739089d1bcae856947b32657436f5c2d06faa5179289e08',
        'v' => '5.80'
      );
      
      $split = explode(" ", $data->object->text, 2);

      if ( $split[0] == 'ะั' || $split[0] == 'ะบั' || $split[0] == '!ะฟัะธะฒะตั' || $split[0] == '!ะัะธะฒะตั'){
        $request_params["message"] = '๐ะัะธะฒะตัะธะบ๐';
      } 
      
      elseif ( $split[0] == "!ัะบะฐะถะธ" ){
          $request_params['message'] = $split[1];
      } 
      
      elseif ( $split[0] == '!ัะตัะธ' ){
            $formula = $split[1];
            $precision = 2; // Number of digits after the decimal point

            $parser = new FormulaParser($formula, $precision);
            $result = $parser->getResult(); // [0 => 'done', 1 => 16.38]
            $request_params['message'] = "๐ะัะฒะตั: " . number_format($result[1], $precision, '.', ',');
      } 
      
      elseif ( $split[0] == '!ะฐะฝะตะบะดะพั' ){
          $anekdots = array(
            'ะะพะปะพะฑะพะบ ะฟะพะฒะตัะธะปัั๐๐',
            '- ะะฐะผะฐ, ะพะดะตะฒะฐะน ะผะตะฝั ะฑััััะตะต! - ะะพะฒะพัะบะฐ, ะบัะดะฐ ะถะต ัั ัะฐะบ ัะพัะพะฟะธัััั? - ะะตะฝั ะฒ ัะฐะดะธะบะต ะถะดัั ะดััะทัั! - ะ ััะพ ะถะต ะฒั ัะฐะผ ะดะตะปะฐะตัะต? - ะะตััะผัั!๐๐',
            'ะฃัะธัะตะปัะฝะธัะฐ:<br>
            - ะัะตะบัะฐัะฝะพ, ะะพะฒะพัะบะฐ, ะดะพะผะฐัะฝะตะต ะทะฐะดะฐะฝะธะต ะฒัะฟะพะปะฝะตะฝะพ ะฑะตะท ะพัะธะฑะพะบ. ะ ัั ัะฒะตัะตะฝ, ััะพ ัะฒะพะตะผั ะฟะฐะฟะต ะฝะธะบัะพ ะฝะต ะฟะพะผะพะณะฐะป!?๐๐',
            "ะฃัะธัะตะปัะฝะธัะฐ ัะฟัะฐัะธะฒะฐะตั ะะพะฒะพัะบั:
            โ ะะพะฒะพัะบะฐ, ะฟะพัะตะผั ะฟัะธัั ะปะตััั ะฝะฐ ัะณ?
            โ ะะพัะพะผั ััะพ ะธะผ ัััะดะฝะพ ะธะดัะธ ััะดะฐ ะฟะตัะบะพะผ.๐๐",
            "ะฃัะธัะตะปัะฝะธัะฐ:
            โ ะะพั ะผััะฐะฒะตะน ัััะดะธััั ัะตะปัะน ะดะตะฝั. ะะตัะธ, ะฐ ััะพ ะฟัะพะธััะพะดะธั ะฟะพัะพะผ?
            ะะพะฒะพัะบะฐ:
            โ ะ ะฟะพัะพะผ ะบะฐะบะฐั-ะฝะธะฑัะดั ะทะฐัะฐะทะฐ ะฒะพะทัะผัั ะธ ัะฐะทะดะฐะฒะธั!๐๐",
            "
            ะัััะตัะฐัััั ะดะฒะฐ ะตะถะธะบะฐ. ะฃ ะพะดะฝะพะณะพ ะทะฐะฑะธะฝัะพะฒะฐะฝะฐ ะปะฐะฟะบะฐ.
            โ ะงัะพ ั ัะพะฑะพะน?
            โ ะะธัะตะณะพ. ะัะพััะพ ัะพัะตะป ะฟะพัะตัะฐัััั.๐๐",
            "ะะตะถะธั ะตะถะธะบ ะฟะพ ะปะตัั, ะฐ ะฝะฐะฒัััะตัั ะตะผั ะทะฐัั:
            โ ะะถะธะบ, ะฐ ะตะถะธะบ, ะฟะพัะตะผั ั ัะตะฑั ะธะณะพะปะบะธ ัะฐะบะธะต ะถะตััะบะธะต?
            โ ะะพัะตะผั, ะฟะพัะตะผั! ะะต ะผัะปัั ั ะดะฐะฒะฝะพ!๐๐",
            "ะัะตั ะณะพะฒะพัะธั ััะฝั:
            โ ะัะธะดะตััั ะผะฝะต ัะตะฑั ะฒัะฟะพัะพัั, ัะพัั, ะผะพะถะตัั ะฟะพะฒะตัะธัั, ะผะฝะต ััะพ ะฝะตะฟัะธััะฝะพ.
            โ ะ ัะฐะบะพะผ ัะปััะฐะต, ะบะพะผั ัั ัะพัะตัั ะดะพััะฐะฒะธัั ัะดะพะฒะพะปัััะฒะธะต?๐๐"
            );
          $rand = $anekdots[rand(0, count($anekdots)-1)];
          $request_params['message'] = $rand;
          $request_params['attachment'] = 'photo-170236279_456239020';
      }
      
      elseif ( $split[0] == '!ะฑะด'){
        $query = pg_fetch_assoc(pg_query($con, 'SELECT message FROM messages where id = 1;'));
        $request_params['message'] = print_r($query);
      }
      
      else {
        $request_params['message'] = 'ะะพะฑัะพ ะฟะพะถะฐะปะพะฒะฐัั!<br> ะะพั ะผะพะธ ะบะพะผะฐะฝะดั:<br>;-P !ะฟัะธะฒะตั - ะฑะพั ัะบะฐะถะตั ัะตะฑะต ะฟัะธะฒะตั๐<br>๐!ัะบะฐะถะธ <ััะฐะทะฐ/ัะตะบัั> - ะฑะพั ะฟะพะฒัะพัะธั ัะฒะพั ััะฐะทั๐<br>๐!ัะตัะธ <ะฟัะธะผะตั> - ะฑะพั ัะตัะธั ะฟัะธะผะตั ะทะฐ ัะตะฑั๐<br>๐!ะฐะฝะตะบะดะพั - ะฑะพั ัะฐััะบะฐะถะตั ัะผะตัะฝะพะน ะฐะฝะตะบะดะพั๐';
      }

      file_get_contents('https://api.vk.com/method/messages.send?' . http_build_query($request_params));
      return 'ok';

      break;
  }
  return "nioh";
});

$app->run();